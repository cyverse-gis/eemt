#!/bin/bash

# exit with metadata.xml to report job status to opal2
function niceexit {
        rcode=$1
        input="$2"
        output="$3"
        msg="$4"
        rfile=$WORK_DIR/metadata.xml
        echo "$msg"
        if [ $rcode -eq 0 ]; then
                echo -e "<results><status>success</status><input>$input</input><output>$output</output><message/></results>" >$rfile
                exit 0
        else
                echo -e "<results><status>failed</status><input>$input</input><output/><message>$msg</message></results>" >$rfile
                exit $rcode
        fi
}

# Read options
ARGS=`getopt -o u:s:l:a: --long demurl:,step:,linke_value:,albedo_value: -n 'rsun.sh' -- "$@"`
if [ $? -ne 0 ]; then
    echo "Incorrect usage"
    echo "Example: ./opal2-wrapper-urldem --demurl ... --step ... --linke_value ... --albedo_value ..."
    exit 1
fi

eval set -- "$ARGS"
while true; do
  case "$1" in
    -u|--demurl)
      shift;
      if [ -n "$1" ]; then
        DEMURL=$1
        shift
      fi
    ;;
    -s|--step)
      shift
      if [ -n "$1" ]; then
        STEP=$1
        shift;
      fi
    ;;
    -l|--linke_value)
      shift
      if [ -n "$1" ]; then
        LINKE_VALUE=$1
        shift;
      fi
    ;;
    -a|--albedo_value)
      shift
      if [ -n "$1" ]; then
        ALBEDO_VALUE=$1
        shift;
      fi
    ;;
    --)
      shift
      break
      ;;
    *) 
      echo "Argument Error: $1"
      echo 
      exit 1
      ;;
  esac
done

# WORK_DIR is also used by run-master
export WORK_DIR=`pwd`

# figure out the full path for the sol directory
SOL_INSTALL=`dirname $0`
SOL_INSTALL=`cd $SOL_INSTALL && pwd`

# safety check
if [ -e run-master -o -e run-workflow ]; then
    echo "Do not run from the Sol checkout!"
    exit 1
fi

t0=`date +%s`
zipfile="output.zip"

echo "[`date`] Got the following parameters: step=$STEP linke_value=$LINKE_VALUE albedo_value=$ALBEDO_VALUE"

t0=`date +%s`

DEMTAR=`basename $DEMURL`
wget -nv $DEMURL 2>&1
[ $? -ne 0 ] && niceexit 1 $DEMURL $zipfile "Error: could not download DEM $DEMURL."
echo "[`date`] downloaded DEM from $DEMURL"

tar xfz $DEMTAR
[ $? -ne 0 ] && niceexit 1 $DEMURL $zipfile "Error: could not unzip DEM from $DEMURL."
DEM=$(basename `ls *.tif | head -n 1`) 

# let's make sure the dem has a sane name
DEM_NAME_FIXED=`echo "$DEM" | sed 's/\.tif$//' | sed 's/\./_/g'`".tif"
if [ "$DEM" != "$DEM_NAME_FIXED" ]; then
    echo "[`date`] Fixed the DEM file nameing: $DEM -> $DEM_NAME_FIXED"
    mv $DEM $DEM_NAME_FIXED
    DEM=$DEM_NAME_FIXED
fi

t1=`date +%s`
$SOL_INSTALL/run-master $DEM $STEP $LINKE_VALUE $ALBEDO_VALUE
retcode=$?
t2=`date +%s`
if [ $retcode -eq 0 ]; then
        echo "[`date`] archiving output ..."
        (cd work && zip -r ../$zipfile global/monthly insol/monthly)
fi

# clean up
rm -f eemt-current.img
rm -f .eemt-makeflow-password

echo
echo "[`date`] Finished, workflow returned exit code $retcode. Output files in $WORK_DIR . Output archive in $WORK_DIR/$zipfile ."
echo "Time in sec: download `expr $t1 \- $t0` ; workflow `expr $t2 \- $t1`"
niceexit $retcode $DEMURL $zipfile "Input from $DEMURL. Output in $WORK_DIR/$zipfile . Execution time: `expr $t2 \- $t0` seconds"


