{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"","title":"Home"},{"location":"background/","text":"Background \u00b6 This workflow tool was originally developed in 2014 at the University Arizona by undergraduate and graduate students of Applied Concepts in Cyberinfrastructure (ACIC) . The students worked with a project client, Dr. Tyson Lee Swetnam, then a post-doc, who had conceived the idea as related to a research paper he was collaborating on at the time: Rasmussen et al. 2015 . The semester long project resulted in a parallel workflow tool run on the University's high performance computing (HPC) system. The group also worked with CyVerse (formerly iPlantCollaborative) to host the code and class wiki. In 2015 the project received an Extreme Science and Engineering Discovery Environment ( XSEDE ) Extended Collaborative Support (ECS) start-up allocation. That effort is described in Swetnam et al. (2016) . The XSEDE start-up allocation was followed by a research allocation on SDSC Comet and the Open Science Grid . The result of that effort is a publically available tool using the (now containerized) workflow, which is deployed on OpenTopography.org . The workflow is containerized and can be run on local machines (laptops, desktops, clusters), cloud, or HPC/HTC using Singularity and Docker . Sol \u00b6 The student's called their project \"Sol\", for the solar radiation they were calculating, and we continue to use that naming scheme here in the repository. The /cyverse-gis/eemt/sol scripting calculates daily and monthly global irradiation and hours of sun. EEMT \u00b6 Effective Energy and Mass Transfer (EEMT) is a representation of environmental energy and mass transfer doing work on the Earth's 'critical zone'. To learn more about the critical zone, visit the NSF Critical Zone Observatories and read Rasmussen et al. 2015 . Figure: Global insolation over 365 days calculated using GRASS r.sun. \u00b6 Contents \u00b6 This Github repository consists of (1) an Opal2 virtual machine deployment script for running jobs on the OpenTopography, (2) a Singularity recipe file which is hosted on Singularity Hub , (3) provisioning scripts for running the workflow on cloud Jetstream , and the Open Science Grid HTC, (4) scripts for running Sol with Makeflow , and (5) scripts for calculating EEMT with Makeflow. Workflow \u00b6 On a small VM or workstation. Pull this repository: git clone https://cyverse-gis/eemt Start the master: ./eemt/sol/run-master eemt/sol/examples/mcn_10m.tif Start the worker: ./eemt/sol/run-worker EEMT Run GRASS, QGIS, Saga-GIS GUI \u00b6 Download the OSGEO GIS Singularity container to run locally. singularity pull --name osgeo.simg shub://tyson-swetnam/osgeo-singularity then singularity exec osgeo.simg qgis or singularity exec shub://tyson-swetnam/osgeo-singularity qgis Climate Data \u00b6 Climate data are available from numerous organizations, e.g. Daymet, WorldClim, Chelsa . These data are used in the EEMT calculation. License & Acknowledgments \u00b6 All of the GIS software used by the scripts are open-source. Most are licensed under the GNU General Public License.","title":"Background"},{"location":"background/#background","text":"This workflow tool was originally developed in 2014 at the University Arizona by undergraduate and graduate students of Applied Concepts in Cyberinfrastructure (ACIC) . The students worked with a project client, Dr. Tyson Lee Swetnam, then a post-doc, who had conceived the idea as related to a research paper he was collaborating on at the time: Rasmussen et al. 2015 . The semester long project resulted in a parallel workflow tool run on the University's high performance computing (HPC) system. The group also worked with CyVerse (formerly iPlantCollaborative) to host the code and class wiki. In 2015 the project received an Extreme Science and Engineering Discovery Environment ( XSEDE ) Extended Collaborative Support (ECS) start-up allocation. That effort is described in Swetnam et al. (2016) . The XSEDE start-up allocation was followed by a research allocation on SDSC Comet and the Open Science Grid . The result of that effort is a publically available tool using the (now containerized) workflow, which is deployed on OpenTopography.org . The workflow is containerized and can be run on local machines (laptops, desktops, clusters), cloud, or HPC/HTC using Singularity and Docker .","title":"Background"},{"location":"background/#sol","text":"The student's called their project \"Sol\", for the solar radiation they were calculating, and we continue to use that naming scheme here in the repository. The /cyverse-gis/eemt/sol scripting calculates daily and monthly global irradiation and hours of sun.","title":"Sol"},{"location":"background/#eemt","text":"Effective Energy and Mass Transfer (EEMT) is a representation of environmental energy and mass transfer doing work on the Earth's 'critical zone'. To learn more about the critical zone, visit the NSF Critical Zone Observatories and read Rasmussen et al. 2015 .","title":"EEMT"},{"location":"background/#figure-global-insolation-over-365-days-calculated-using-grass-rsun","text":"","title":"Figure: Global insolation over 365 days calculated using GRASS r.sun."},{"location":"background/#contents","text":"This Github repository consists of (1) an Opal2 virtual machine deployment script for running jobs on the OpenTopography, (2) a Singularity recipe file which is hosted on Singularity Hub , (3) provisioning scripts for running the workflow on cloud Jetstream , and the Open Science Grid HTC, (4) scripts for running Sol with Makeflow , and (5) scripts for calculating EEMT with Makeflow.","title":"Contents"},{"location":"background/#workflow","text":"On a small VM or workstation. Pull this repository: git clone https://cyverse-gis/eemt Start the master: ./eemt/sol/run-master eemt/sol/examples/mcn_10m.tif Start the worker: ./eemt/sol/run-worker EEMT","title":"Workflow"},{"location":"background/#run-grass-qgis-saga-gis-gui","text":"Download the OSGEO GIS Singularity container to run locally. singularity pull --name osgeo.simg shub://tyson-swetnam/osgeo-singularity then singularity exec osgeo.simg qgis or singularity exec shub://tyson-swetnam/osgeo-singularity qgis","title":"Run GRASS, QGIS, Saga-GIS GUI"},{"location":"background/#climate-data","text":"Climate data are available from numerous organizations, e.g. Daymet, WorldClim, Chelsa . These data are used in the EEMT calculation.","title":"Climate Data"},{"location":"background/#license-acknowledgments","text":"All of the GIS software used by the scripts are open-source. Most are licensed under the GNU General Public License.","title":"License &amp; Acknowledgments"},{"location":"citation/","text":"Citation \u00b6 Publications \u00b6 GitHub \u00b6","title":"Citation"},{"location":"citation/#citation","text":"","title":"Citation"},{"location":"citation/#publications","text":"","title":"Publications"},{"location":"citation/#github","text":"","title":"GitHub"},{"location":"eemt/","text":"As a proof of concept we developed a distributed computing workflow using open-source GIS tools (GDAL, SAGA, GRASS, and QGIS) and Makeflow to calculate traditional and topographically controlled \"Effective Energy and Mass Transfer (EEMT)\" ( Rasmussen et al. 2015 ), which is a measure of the available free energy for physical and chemical work [units in mega joules per meter square over time: MJ m2 yr-1], at the surface of the critical zone. To calculate EEMT we use a digital elevation model (DEM) and monthly averaged precipitation, vapor pressure, and temperature series. With open-source GIS software we calculate the potential solar radiation of a DEM at any resolution, e.g. 1 to 90 m2, and upscale the lower resolution climate data (e.g. 1 km2) to the same resolution using a MT-CLIM type approximation . The user only needs to supply or define the input DEM and the workflow will distribute the job to the HPC worker nodes through Makeflow. An output file tree is created with every upscaled climate and solar output file saved to sub-directories. Solar radiation is calculated for every day of the year at a user defined temporal step (e.g. 3-30 minute interval). To avoid Jensen\u2019s inequality we integrate every time step, thus approximating more closely the curve of the total energy input into the CZ. This is further improved when topographic shading in complex terrain and/or urban settings are turned on. Summary statistics are generated for each climate variable. Calculations for conventional EEMT \u00b6 Local temperature correction \u00b6 Correcting temperature for local conditions Local Potential Evaporation-Transpiration (PET) using Hamon's \u00b6 Estimating PET from local conditions Solar Insolation \u00b6 Mean saturated vapor pressure \u00b6 Effective Precipitation (P_e) \u00b6 Net Primary Productivity \u00b6 Calculations for Topographic correction of EEMT \u00b6 Temperature correction using solar irradiation/shading / flat surface \u00b6","title":"Eemt"},{"location":"eemt/#calculations-for-conventional-eemt","text":"","title":"Calculations for conventional EEMT"},{"location":"eemt/#local-temperature-correction","text":"Correcting temperature for local conditions","title":"Local temperature correction"},{"location":"eemt/#local-potential-evaporation-transpiration-pet-using-hamons","text":"Estimating PET from local conditions","title":"Local Potential Evaporation-Transpiration (PET) using Hamon's"},{"location":"eemt/#solar-insolation","text":"","title":"Solar Insolation"},{"location":"eemt/#mean-saturated-vapor-pressure","text":"","title":"Mean saturated vapor pressure"},{"location":"eemt/#effective-precipitation-p_e","text":"","title":"Effective Precipitation (P_e)"},{"location":"eemt/#net-primary-productivity","text":"","title":"Net Primary Productivity"},{"location":"eemt/#calculations-for-topographic-correction-of-eemt","text":"","title":"Calculations for Topographic correction of EEMT"},{"location":"eemt/#temperature-correction-using-solar-irradiationshading-flat-surface","text":"","title":"Temperature correction using solar irradiation/shading / flat surface"},{"location":"installation/","text":"Installation \u00b6 Installation of the software environment for calculating the models can be done locally, using the conda or mamba package managers, or with Docker, or by using a makefile Docker \u00b6 Our cached Docker Image is maintained on this GitHub repository, and uses an Action to build and cache the container on CyVerse Harbor. docker pull harbor.cyverse.org/vice/jupyter/eemt:latest docker run -it --rm -p 8888:8888 harbor.cyverse.org/vice/jupyter/eemt:latest Makefile \u00b6 Conda \u00b6 We recommend installing mamba and then installing the environment.yml for the geospatial environment mamba env create eemt -f environment.yml conda activate eemt Developer Notes \u00b6 https://grasswiki.osgeo.org/wiki/Compile_and_Install https://github.com/OSGeo/grass/blob/main/INSTALL.md Installation order for building GRASS-GIS must be done sequentially: PROJ GDAL-OGR (compiled without GRASS support) PostgreSQL, MySQL, sqlite (optional) GRASS GIS GDAL-OGR-GRASS plugin (optional)","title":"Installation"},{"location":"installation/#installation","text":"Installation of the software environment for calculating the models can be done locally, using the conda or mamba package managers, or with Docker, or by using a makefile","title":"Installation"},{"location":"installation/#docker","text":"Our cached Docker Image is maintained on this GitHub repository, and uses an Action to build and cache the container on CyVerse Harbor. docker pull harbor.cyverse.org/vice/jupyter/eemt:latest docker run -it --rm -p 8888:8888 harbor.cyverse.org/vice/jupyter/eemt:latest","title":"Docker"},{"location":"installation/#makefile","text":"","title":"Makefile"},{"location":"installation/#conda","text":"We recommend installing mamba and then installing the environment.yml for the geospatial environment mamba env create eemt -f environment.yml conda activate eemt","title":"Conda"},{"location":"installation/#developer-notes","text":"https://grasswiki.osgeo.org/wiki/Compile_and_Install https://github.com/OSGeo/grass/blob/main/INSTALL.md Installation order for building GRASS-GIS must be done sequentially: PROJ GDAL-OGR (compiled without GRASS support) PostgreSQL, MySQL, sqlite (optional) GRASS GIS GDAL-OGR-GRASS plugin (optional)","title":"Developer Notes"},{"location":"instructions/","text":"Workflow \u00b6 Our workflow utilizes the Cooperative Computing Tools Makeflow and WorkQueue workflow managers. We are running a factory on a CyVerse virtual machine which checks for jobs every five minutes. When a task is detected, nodes are requested from the Open Science Grid (OSG). Workers on OSG are run on each node (cores = 4) and more are added every five minutes until there are no more waiting tasks. When the task is complete, the workers are released and jobs that are ended go back to the OSG pool. Terminology \u00b6 factory : a workflow monitor that coordinates the supervisor, workers, and tasks job : a request sent to a high performance or high throughput computing scheduler for a computational resource task : an execution in the workflow, e.g. to process a single day of solar irradiation, or to calculate a monthly total of irradiation worker : process that monitors an individual task, can be reassigned new tasks as old tasks complete supervisor : a process that controls the tasks that each worker is assigned Instructions \u00b6","title":"Instructions"},{"location":"instructions/#workflow","text":"Our workflow utilizes the Cooperative Computing Tools Makeflow and WorkQueue workflow managers. We are running a factory on a CyVerse virtual machine which checks for jobs every five minutes. When a task is detected, nodes are requested from the Open Science Grid (OSG). Workers on OSG are run on each node (cores = 4) and more are added every five minutes until there are no more waiting tasks. When the task is complete, the workers are released and jobs that are ended go back to the OSG pool.","title":"Workflow"},{"location":"instructions/#terminology","text":"factory : a workflow monitor that coordinates the supervisor, workers, and tasks job : a request sent to a high performance or high throughput computing scheduler for a computational resource task : an execution in the workflow, e.g. to process a single day of solar irradiation, or to calculate a monthly total of irradiation worker : process that monitors an individual task, can be reassigned new tasks as old tasks complete supervisor : a process that controls the tasks that each worker is assigned","title":"Terminology"},{"location":"instructions/#instructions","text":"","title":"Instructions"}]}